{
    "name": "gd-place-2023",
    "private": true,
    "version": "0.0.0",
    "type": "module",
    "scripts": {
        "vite:dev-dev": "cross-env RT_DB_ENV=local CLOUD_FUNCTIONS_ENV=dev vite --host",
        "vite:dev-live": "cross-env RT_DB_ENV=live CLOUD_FUNCTIONS_ENV=dev vite --host",
        "vite:dev-prod": "cross-env RT_DB_ENV=live CLOUD_FUNCTIONS_ENV=prod vite --host",
        "vite:build": "vite build",
        "predeploy-debug": "npm run wasm:build-prod-debug && npm run shared:build && cross-env CLOUD_FUNCTIONS_ENV=dev npm run functions:build",
        "predeploy": "npm run wasm:build-prod && npm run shared:build && cross-env CLOUD_FUNCTIONS_ENV=prod npm run functions:build",
        "deploy:dev": "npm run predeploy-debug && cross-env CLOUD_FUNCTIONS_ENV=dev npm run vite:build && firebase use dev && firebase deploy --only hosting:dev,functions,database:rules",
        "deploy:prod": "npm run predeploy && cross-env CLOUD_FUNCTIONS_ENV=prod npm run vite:build && firebase use prod && firebase deploy --only hosting:prod,functions,database:rules",
        "emulators:start": "firebase use dev && firebase emulators:start --only functions,database,auth --import ./emulator_data/ --export-on-exit",
        "functions:build": "cd ./functions && npm run build && cd ..",
        "wasm:step-cargo": "cd rust/wasm-lib && cargo build --target wasm32-unknown-unknown",
        "wasm:step-bindgen": "cd rust && cross-var wasm-bindgen \"./target/wasm32-unknown-unknown/$PROF/wasm_lib.wasm\" --out-dir ./wasm-lib/pkg --target web --weak-refs --reference-types",
        "wasm:step-opt": "cd rust/wasm-lib/pkg && wasm-opt wasm_lib_bg.wasm -o wasm_lib_bg_opt.wasm -O4 --shrink-level 2 --code-folding --const-hoisting --enable-reference-types",
        "wasm:step-package": "cd rust/wasm-lib && copy \"./keepme_pkg_package.json\" \"./pkg/package.json\"",
        "wasm:step-replace-opt": "cd rust/wasm-lib/pkg && del \"wasm_lib_bg.wasm\" && ren \"wasm_lib_bg_opt.wasm\" \"wasm_lib_bg.wasm\"",
        "wasm:build": "cd rust/wasm-lib && wasm-pack build --no-opt --reference-types --weak-refs --target web && cd ../..",
        "wasm:build-prod": "npm run wasm:step-cargo -- --profile prod && cross-env PROF=prod npm run wasm:step-bindgen && npm run wasm:step-opt && npm run wasm:step-replace-opt && npm run wasm:step-package",
        "wasm:build-prod-debug": "npm run wasm:step-cargo -- --profile prod-debug && cross-env PROF=prod-debug npm run wasm:step-bindgen -- --debug --keep-debug && npm run wasm:step-opt -- --debuginfo && npm run wasm:step-replace-opt && npm run wasm:step-package",
        "shared:build": "cd shared-lib && npm run build && cd ..",
        "nexus:gen": "cd rust/the-nexus && cargo test --release generate_shid -- --nocapture && cd ../..",
        "nexus:gen_no_sheet": "cd rust/the-nexus && cargo test --release generate_shimabid_no_sheet -- --nocapture && cd ../..",
        "symlink": "cd functions && mklink /D shared-lib ..\\shared-lib",
        "rust:cleanall": "cd rust/the-nexus && cargo clean && cd ../wasm-lib && cargo clean && cd .."
    }
}